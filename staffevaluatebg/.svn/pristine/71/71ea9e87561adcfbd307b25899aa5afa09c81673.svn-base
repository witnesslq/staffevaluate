package com.app.action;

import java.util.List;

import org.apache.struts2.ServletActionContext;

import com.app.entity.Unit;
import com.app.service.UnitService;
import com.app.util.JsonFilter;

import net.sf.json.JSONArray;
import net.sf.json.JsonConfig;
/**
 * 
 * @author 邢昭武
 * 
 * 单位action
 *
 */
public class UnitAction extends SuperAction {
	private Unit unit;
	private UnitService unitService;

	public Unit getUnit() {
		return unit;
	}

	public void setUnit(Unit unit) {
		this.unit = unit;
	}

	public UnitService getUnitService() {
		return unitService;
	}

	public void setUnitService(UnitService unitService) {
		this.unitService = unitService;
	}
	/**
	 * 添加角色
	 * @return
	 * @throws Exception
	 */
	public String add() throws Exception {
		if (unitService.save(unit)) {
			return "add";
		}
		return "error";
	}
	
	public String getAjax() throws Exception {
		List<Unit> listAll = unitService.findAllUnit();
		System.out.println(listAll.toString());
		JSONArray json=JSONArray.fromObject(listAll);
		ServletActionContext.getResponse().setContentType("text/html");
		ServletActionContext.getResponse().setCharacterEncoding("utf-8");
		ServletActionContext.getResponse().getWriter().printf(json.toString());
		ServletActionContext.getResponse().getWriter().flush();
		ServletActionContext.getResponse().getWriter().close();
		return null; 
	}
	public String getAll() throws Exception {
		List<Unit> listAll = unitService.findAllUnit();
		return "getAll";
	}
	
	public String listP() throws Exception {
		int unitCount = 0;
		try {
			unitCount = unitService.getUnitCount();
		} catch (Exception e1) {
			e1.printStackTrace();
		}
		if (unitCount < 1) {
		}
		int pageCount = unitService.getPageCount(unitCount, unitService.UNIT_PAGE_SIZE);
		int pageNo;
		if (request.getParameter("pageNo") == null || request.getParameter("pageNo").trim().equals("")) {
			pageNo = 1;
		}
		try {
			pageNo = Integer.parseInt(request.getParameter("pageNo").trim());
		} catch (Exception e) {
			pageNo = 1;
		}
		if (pageNo > pageCount) {
			pageNo = pageCount;
		}
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("currentPage", pageNo);
		request.setAttribute("totalCount", unitCount);
		try {
			request.setAttribute("listUnit", unitService.findUnitByPage(pageNo));
		} catch (Exception e) {
			e.printStackTrace();
			return "error";
		}
		return "listP";
	}
	
	public String updateInfo() throws Exception {
		String ids = request.getParameter("ids");
		Integer id = null;
		if(ids != null && !"".equals(id)){
			id = Integer.parseInt(ids);
		}
		System.out.println(id);
		Unit unit = unitService.findById(id);
		request.setAttribute("unitInfo", unit);
		return "updateInfo";
	}
	
	public String update() throws Exception {
		System.out.println(unit.getName()+"---"+unit.getId());
		unitService.update(unit);
		return "update";
	}
	public String delete() throws Exception {
		String ids = request.getParameter("ids");
		System.out.println("ids=="+ids);
		ids.substring(0, ids.length()-1);
		unitService.delete(ids);
		return "delete";
	}
}
